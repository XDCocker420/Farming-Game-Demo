[gd_scene load_steps=5 format=3 uid="uid://0y5hanmykn2e"]

[ext_resource type="PackedScene" uid="uid://gs07mddrega3" path="res://scenes/crops/farmFieldLeft.tscn" id="3_k2eon"]
[ext_resource type="PackedScene" uid="uid://cri6prl6lptm8" path="res://scenes/crops/farmFieldMiddle.tscn" id="4_a682d"]
[ext_resource type="PackedScene" uid="uid://d3ihihig4jn71" path="res://scenes/crops/farmFieldRight.tscn" id="5_6lk6o"]

[sub_resource type="GDScript" id="GDScript_wg20o"]
script/source = "extends Area2D
class_name Field

signal player_entered(field)
signal player_exited(field)
signal crop_planted(crop_type)
signal crop_harvested(crop_data)

var current_crop: CropData = null
var is_occupied: bool = false
var player_in_range: bool = false

@onready var sprite: Sprite2D = $Sprite2D
@onready var crop_manager = get_node(\"/root/CropManager\")
@export var spawn_carrot = preload(\"res://scenes/structures/carrot.tscn\")

func _ready():
	body_entered.connect(_on_body_entered)
	body_exited.connect(_on_body_exited)

func _on_body_entered(body: Node2D) -> void:
	if body.is_in_group(\"Player\"):
		player_in_range = true
		player_entered.emit(self)
		print(\"Player entered field: \", name)

func _on_body_exited(body: Node2D) -> void:
	if body.is_in_group(\"Player\"):
		player_in_range = false
		player_exited.emit(self)
		print(\"Player exited field: \", name)

func try_interact(selected_crop: String = \"wheat\") -> void:
	if player_in_range:
		if is_occupied and is_fully_grown():
			harvest_crop()
		else:
			plant_new_crop(selected_crop)

func plant_new_crop(crop_name: String) -> bool:
	if not can_plant():
		print(\"Cannot plant here\")
		return false
		
	var crop = crop_manager.get_crop_type(crop_name)
	if not crop:
		print(\"Invalid crop type: \", crop_name)
		return false
		
	current_crop = CropData.new()
	current_crop.crop_type = crop
	current_crop.growth_progress = 0.0
	current_crop.current_stage = 0
	current_crop.plant_time = Time.get_unix_time_from_system()
	is_occupied = true
	update_crop_appearance()
	crop_planted.emit(crop_name)
	print(\"Planted: \", crop_name)
	return true

func harvest_crop() -> void:
	if is_occupied and is_fully_grown():
		var harvested_crop = current_crop
		current_crop = null
		is_occupied = false
		sprite.texture = null
		crop_harvested.emit(harvested_crop)
		print(\"Crop harvested!\")

func can_plant() -> bool:
	return not is_occupied

func is_fully_grown() -> bool:
	if current_crop:
		return current_crop.growth_progress >= 1.0
	return false

func update_crop_appearance() -> void:
	if current_crop and sprite:
		var stage_name = \"%s_%d\" % [current_crop.crop_type.crop_name, current_crop.current_stage]
		var texture = load(\"res://assets/crops/%s.png\" % stage_name)
		if texture:
			sprite.texture = texture

func spawn() -> void:
	var carrot = spawn_carrot.instantiate()
	add_child(carrot)
"

[node name="Field" type="Area2D"]
script = SubResource("GDScript_wg20o")

[node name="FarmFieldLeft" parent="." instance=ExtResource("3_k2eon")]
position = Vector2(32, -29)

[node name="FarmFieldMiddle" parent="." instance=ExtResource("4_a682d")]
position = Vector2(94, -28)

[node name="FarmFieldRight" parent="." instance=ExtResource("5_6lk6o")]
position = Vector2(155, -28)

[connection signal="body_entered" from="." to="." method="_on_body_entered"]
[connection signal="body_exited" from="." to="." method="_on_body_exited"]
